                           // –§–£–ù–ö–¶–ò–ò
// –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å "—á—Ç–æ –¥–µ–ª–∞–µ—Ç" —Ç–æ –µ—Å—Ç—å –≥–ª–∞–≥–æ–ª
// —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é 
// const add = function name () {
    // —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏
// }  - —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
// —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º –º–µ—Å—Ç–µ –Ω–∏–∂–µ –≤ –∫–æ–¥–µ
// —á—Ç–æ –±—ã –≤—ã–∑–≤–∞—Ç—å: –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏ + ()

// const add = function name() {
//     console.log('–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è add');
// };

// add();

// ===============================================================================================================================================
// // —É —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã. 
// –í()(–ø–∞—Ä–º–µ—Ç—Ä—ã) –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
// const add = function name(x, y) {
//     console.log('–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è add');
//     console.log(x);
//     console.log(y);
// };
// // –∞ –≤ –≤—ã–∑–æ–≤–µ () (–∞—Ä–≥—É–º–µ–Ω—Ç—ã) - –∑–Ω–∞—á–µ–º–Ω–∏—è –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
// add(2, 3);

// const add = function name(x, y) {
//     console.log('–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è add');
//     const result = x + y;
//     console.log('x + y =', result);
// };
// add(2, 3);
// ===============================================================================================================================================
// —Ñ—É–Ω–∫—Ü–∏—è –∫–∞–∫ –º—è—Å–æ—Ä—É–±–∫–∞ —á—Ç–æ —Ç–æ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏ —á—Ç–æ —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∏ –ø–æ–º–æ—â–∏ result 
// const add = function name(x, y) {
//     console.log(x);
//     console.log(y);

//     // const result =  x + y;
//     // console.log('result =', result);
//     console.log('–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è add');
//     return  x + y;
// };

// const r1 = add(2, 3);
// console.log('r1 =', r1);
// return –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Ç–æ–º –º–µ—Å—Ç–µ –≥–¥–µ —Å—Ç–æ–∏—Ç
// ===============================================================================================================================================
// return –º–æ–∂–µ—Ç –±—ã—Ç—å –∏ –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ
// const fn = function (value) {
//     console.log(1);

//     console.log(2);

//     if (value < 50) {
//         return '–ú–µ–Ω—å—à–µ —á–µ–º 50 ';
//     } else {
//         return '–ë–æ–ª—å—à–µ —á–µ–º 50';
//     }
// }

// console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏ =', fn(10));

// console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏ =', fn(100));
// ===============================================================================================================================================
                            //   –ü—Ä–ø–∫—Ç–∏–∫–∞
                            // –∑–∞–¥–∞—á–∞ 1
// –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –∑–∞–¥–∞—á—É. –°–æ—Å—Ç–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥—Å—á–µ—Ç–∞ —Å—É–º–º—ã –º–∞—Å—Å–∏–≤–∞ –∏–ª–∏ —Ç—Ä–µ—Ö –∏–ª–∏ 150
// const carts = [54, 28, 105, 70, 92, 17, 120, 90, 100, 230, 310, 2];
// let total = 0;
// for (const cart of carts) {
//     total += cart;
// }
// console.log('Total = ', total);
// -------------------------------
// const calculateTotalPrice = function (items) {
//     console.log('items –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ =', items);

//     let total = 0;
//     for (const item of items) {
//          total += item;
//     }
//     return total
// } 
// const result1 = calculateTotalPrice([1, 2, 3]);
// console.log(result1);
// console.log(calculateTotalPrice([5, 10, 15, 20]));
// console.log(calculateTotalPrice([100, 200, 300]));
// ------------------------------------------------------------------------------

// const book = {
//   title: "The Last Kingdom",
//   author: "Bernard Cornwell",
//   genres: ["historical prose", "adventure"],
//   public: true,
//   rating: 8.38,
// };

// book.pageCount = 836;
// book.originalLanguage = "en";
// book.translations = ["ua", "ru"];

// console.log(book.pageCount); // 836
// console.log(book.originalLanguage); // "en"
// console.log(book.translations); // ["ua", "ru"]
// ----------------------------------------------------------------------------------------
                              //  –ó–∞–¥–∞—á–∞ 3
            // –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–∏–º–∫–∞ –ª–æ–≥–∏–Ω–∞
      // –µ—Å–ª–∏ –ª–æ–≥–∏–Ω–∞ –Ω–µ—Ç, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
      // –µ—Å–ª–∏ –ª–æ–≥–∏–Ω –µ—Å—Ç—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω"
// –≤–∞—Ä–∏–∞–Ω—Ç 1 —á–µ—Ä–µ–∑ for of
// const logins = ['no3name', 'mang0d0dj', 'k1w1dabs', 'pol1iskute'];
// const loginToFind = 'mang0d0dj';

// const message = logins.includes(loginToFind)
//     ? `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–∞–π–¥–µ–Ω`
//     : `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–µ –Ω–∞–π–¥–µ–Ω`
    
// console.log(message);

// const findLogin = function (allLogins, loginToFind) {
//   let messege = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–µ –Ω–∞–π–¥–µ–Ω`;

//   for (const login of allLogins) {
//     if (login === loginToFind) {
//       messege = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–∞–π–¥–µ–Ω`;
//     }
//   }

//   return messege;
// };

// console.log(findLogin(logins, 'neNadoPaniki'));
// console.log(findLogin(logins, 'mang0d0dj'));
// console.log(findLogin(logins, 'vsePolu4itsya'));
// console.log(findLogin(logins, 'pol1iskute'));

// –¥–µ–ª–∞–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—é –∫–æ–¥–∞ üëáüèºüëáüèºüëáüèº

// const findLogin = function (allLogins, loginToFind) {
//   for (const login of allLogins) {
//     if (login === loginToFind) {
//       return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–∞–π–¥–µ–Ω`;
//     }
//   };
  
//   return  `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–µ –Ω–∞–π–¥–µ–Ω`;
   
// };

// console.log(findLogin(logins, 'neNadoPaniki'));
// console.log(findLogin(logins, 'mang0d0dj'));
// console.log(findLogin(logins, 'vsePolu4itsya'));
// console.log(findLogin(logins, 'pol1iskute'));

// –≤–∞—Ä–∏–∞–Ω—Ç 2 –∫–æ—Ä–æ—á–µ —Ç–µ—Ä–Ω–∞–Ω–∫–∏–∫ —á–∏—Ç–∞–µ—Ç—Å—è —Ç–∞–∫:
// –¥–µ–ª–≤–µ–º –ø–µ—Ä–µ–º–Ω–Ω—É—é 
// –µ—Å–ª–∏ –≤—Å–µ –ª–æ–≥–∏–Ω—ã alllogins –≤–∫–ª—é—á–∞—é—Ç –≤ —Å–µ–±—è –ª–æ–≥–∏–Ω –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ –Ω–∞–π—Ç–∏ loginToFind 
// —Ç–æ –≤ message –∑–∞–ø–∏—Å—ã–≤–∞–µ–º `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–∞–π–¥–µ–Ω`
// –µ—Å–ª–∏ –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç —Ç–æ `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–µ –Ω–∞–π–¥–µ–Ω`
// –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —Ç–∞–∫: –µ—Å–ª–∏ true —Ç–æ –Ω–∞ –º–µ—Å—Ç–æ —Ç–µ—Ä–Ω–∞–Ω—Ä–Ω–∏–∫–∞ –≤–µ—Ä–µ—Ç—Å—è –Ω–∞–π–¥–µ–Ω, –µ—Å–ª–∏ false —Ç–æ –≤–µ—Ä–Ω–µ—Ç—Å—è –Ω–µ –Ω–∞–π–¥–µ–Ω –∏ —Å—Ä–∞–∑—É –¥–Ω–ª–∞–µ–º return
// —Å—Ö–µ–º–∞ —Ç–µ—Ä–Ω–∞—Ä–Ω–∏–∫–∞ 
// true ? 1 : 2; //1
// false ? 1 : 2; //2

// const logins = ['no3name', 'mang0d0dj', 'k1w1dabs', 'pol1iskute'];

// const findLogin = function (allLogins, loginToFind) {
//  return allLogins.includes(loginToFind)
//     ? `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–∞–π–¥–µ–Ω`
//     : `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–µ –Ω–∞–π–¥–µ–Ω`
  
// };

// console.log(findLogin(logins, 'neNadoPaniki'));
// console.log(findLogin(logins, 'mang0d0dj'));
// console.log(findLogin(logins, 'vsePolu4itsya'));
// console.log(findLogin(logins, 'pol1iskute'));

// ----------------------------------------------------------------------------------------------------------------------------------

// –Ω–∞–π—Ç–∏ —Å–∞–º–æ–µ –º–∞–ª–µ–Ω—å–∫–æ–µ —á–∏—Å–ª–æ –≤ –º–∞—Å—Å–∏–≤–µ 
// const numbers = [9, 8, 92, 17, 120, 19, 2, 100, 230, 12];
//  —à–∞–≥ 1 - –æ–±—ä—è–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ 
//  —à–∞–≥ 2 - –∑–∞ –º–µ–Ω—å—à–µ–µ —á–∏—Å–ª–æ –≤–∑—è—Ç—å –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ 
//  —à–∞–≥ 3 - –ø–µ—Ä–µ–±—Ä–∞—Ç—å –º–∞—Å—Å–∏–≤
//  —à–∞–≥ 4 - —Å—Ä–∞–≤–Ω–∏—Ç—å –∫–∞–∂–æ–µ —Å–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ —Å —Ç–µ–∫—É—â–∏–º –µ—Å–ª–∏ –æ–Ω–æ –º–µ–Ω—å—à–µ —Ç–æ –∑–∞–º–µ–Ω–∏—Ç—å
//                          –†–µ—à–µ–Ω–∏–µ
// const numbers = [9, 8, 92, 17, 120, 19, 2, 100, 230, 12];
// // —à–∞–≥ 1 + —à–∞–≥ 2
// let smallestNumber = numbers[0]
// // —à–∞–≥ 3
// for (const number of numbers) {
// // —à–∞–≥ 4
//     if (number < smallestNumber) {
//         smallestNumber = number;
//     } 
// }
// console.log('smallestNumber =', smallestNumber)

// –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ–º —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ (–ø–∞—Ä–∞–º–µ–Ω—Ç—Ä numbers, –∞—Ä–≥—É–º–µ–Ω—Ç 3, 8, 12, -2, 15], –≤–æ–∑–≤—Ä–∞—Ç return smallestNumber; , —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏)
// const findSmallesNumber = function (numbers) {
//     let smallestNumber = numbers[0]
//     for (const number of numbers) {
//         if (number < smallestNumber) {
//         smallestNumber = number;
//         } 
//     }

//     return smallestNumber;
// }
 
// console.log('smallestNumber =', findSmallesNumber([3, 8, 12, -2, 15])); //-2
// console.log('smallestNumber =', findSmallesNumber([100, 54, 8, 12, 47])); // 8
// console.log('smallestNumber =', findSmallesNumber([7, 21, 84, 15, 4])); // 4 

// --------------------------------------------------------------------------------------------------------------------------------
//                              –ó–∞–¥–∞—á–∞ 7
// –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é Change Case 
           
// const string = 'qWeRTzxCv';
// const letters = string.split('');
// let invertedString = '';

// for (const letter of letters) {
//     const isEqual = letter === letter.toLowerCase();

//     invertedString += isEqual ? letter.toUpperCase() : letter.toLowerCase();
// }
// console.log('invertedString: ', invertedString); 
   
// const changeCase = function (string) {
//     const letters = string.split('');
//     let invertedString = '';

//     // —á–∏—Ç–∞–µ—Å—Ç—è —Ç–∞–∫: –∞ —ç—Ç–æ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ –µ—Å—Ç—å true –≤–µ—Ä–Ω–∏ –≤ –≤–µ—Ä—Ö–Ω–µ–º –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç  
//     for (const letter of letters) {
//         const isInLowerCase = letter === letter.toLowerCase();

//         invertedString += isInLowerCase
//             ? letter.toUpperCase()
//             : letter.toLowerCase();
//     }

//     return invertedString;
// };

// console.log(changeCase('qwerTY'));
// console.log(changeCase('mAnGo'));
// console.log(changeCase('AjAx'));
// ----------------------------------------------------------------------------------
        //                     –ó–∞–¥–∞—á–∞ 8
// –Ω–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é slugify –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç URL-slug
//—Å—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤ –∏ –ø—Ä–æ–±–µ–ª–æ–≤
        //                   —Ä–µ—à–µ–Ω–∏–µ
// const titel = 'Top 10 benefits of React framework'
// // —à–∞–≥ 1 - –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É 
// const normolizedTitel = titel.toLowerCase();
// console.log(normolizedTitel);
// // —à–∞–≥ 2 - –ø–æ–ª—É—á–∏–≤—à—É—é—Å—è —Å—Ç—Ä–æ–∫—É —Ä–∞–∑–±–∏—Ç—å –≤ –º–∞—Å—Å–∏–≤ –ø–æ –ø—Ä–æ–±–µ–ª—É
// const words = normolizedTitel.split(' '); 
// console.log(words);
// // —à–∞–≥ 3 - —Å—à–∏—Ç—å –º–∞—Å—Å–∏–≤ —Å —Ç–∏—Ä–µ—à–∏—á–∫–∞–º–∏
// const slug = words.join('-');
// console.log(slug);

// // —Ç–æ –∂–µ —Å–∞–º–æ–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å (–¥–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω—ã–π –∫–æ–¥)
// const slugOptimized = titel.toLowerCase().split(' ').join('-');
// console.log(slugOptimized);

// const slugify = function (string) {
//     // const normolizedTitel = string .toLowerCase();
//     // const words = normolizedTitel.split(' '); 
//     // const slug = words.join('-');
//     // // –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –∫–æ—Ä–æ—á–µ 
//     // // üëáüèºüëáüèºüëáüèº
//    return string.toLowerCase().split(' ').join('-');
// }

// console.log(slugify('Top 10 benefits of React framework'));
// console.log(slugify('Top 20 mistakes of writening js code'));
// console.log(slugify('Top 30 good ideas of the future'));
// ---------------------------------------------------------------------------------------------
                        //  –ó–∞–¥–∞—á–∞ 9
        // —Ä–∞–±–æ—Ç–∞ —Å –ø—Å–µ–≤–¥–æ–º–∞—Å—Å–∏–≤–æ–º
// —Å–¥–µ–ª–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏–∑ –ø—Å–µ–≤–¥–æ–º–∞—Å—Å–∏–≤–∞. Arguments - –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ 

// –º–µ—Ç–æ–¥ 1 old school
// const fn = function () {
//     console.log(arguments);

//     const args = Array.from(arguments);

//     console.log(args);

//     // for (const arg of arguments) {
//     //     console.log(arg);
//     // }
// };

// fn(1, 2, 3);
// fn(1, 2, 3, 4, 5);
// fn(1, 2, 3, 4, 5, 6, 7);

// –º–µ—Ç–æ–¥ 2 
// –ø—Ä–∏ –ø–æ–º–æ—â–∏ rest ...    ... = Array.from(arguments)

// const fn = function (...args) {
//     console.log(args);
// };

// fn(1, 2, 3);
// fn(1, 2, 3, 4, 5);
// fn(1, 2, 3, 4, 5, 6, 7);

// –µ—Å–ª–∏ —É –Ω–∞—Å –ø–µ—Ä–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞–ø—Ä–∏–º–µ—Ä —Å—Ç—Ä–æ–∫–∞, —Ç–æ –º–æ–∂–Ω–æ –∏—Ö –∑–∞–ø–∏—Å–∞—Ç—å –≤ 
// –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∞ –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –≤ rest 

// const fn = function (a, b, c, ...args) {
//     console.log(`${a} ${b} ${c}`);
//     console.log(args);
// };

// fn('hello', 1, 2, 3);
// fn('aloha', 1, 2, 3, 4, 5);
// fn('hi', 1, 2, 3, 4, 5, 6, 7);
// ---------------------------------------------------------------------------------------------
                        //  –ó–∞–¥–∞—á–∞ 10
                  // –Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—é ...rest
 //–Ω–∞–ø–∏—â–∏ —Ñ—É–∫—Ü–∏—é add –¥–ª—è —Å–ª–æ–∂–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –∫–æ–ª-–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ (—á–∏—Å–µ–ª)

// const add = function (...args) { 
//     console.log(args);

//     let total = 0;

//     for (const arg of args) {
//         total += arg; 
//     }

//     return total;
// };

// console.log(add(1, 2, 3));
// console.log(add(1, 2, 3, 4, 5, 6));
// ---------------------------------------------------------------------------------------------
                        //  –ó–∞–¥–∞—á–∞ 10
        // –Ω–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é filterNumbers
    // - –ø–µ—Ä–≤—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª
    // - –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∞—Ä–≥ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ –µ–∫–æ–ª-–≤–æ –¥—Ä—É–≥–∏—Ö –∞—Ä–≥
    // - —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—ã—Ü –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ—Ä–º –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å–æ –≤—Ç–æ—Ä–æ–≥–æ
    //  –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –∞–Ω–∞–ª–æ–≥ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–∏ –º–∞—Å—Å–∏–≤–µ
    // —Ç–æ –µ—Å—Ç—å –≤–µ—Ä–Ω—É—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ–≤–ø–∞–¥–∞—é—â–∏–µ
    
// const filterNumbers = function (arrey, ...args) {
//     console.log('arrey', arrey);
//     console.log('args', args);

//     const uniqueElement = [];

//     for (const arg of args) {
//         // console.log(arg);
//         // console.log(arrey.includes(arg));

//         if (arrey.includes(arg)) {
//             console.log(`—ç–ª–ª–µ–º–µ–Ω—Ç ${arg} –µ—Å—Ç—å`);

//             uniqueElement.push(arg);
//         }
//     }

//     // console.log('–Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤—ç', uniqueElement);

//     return uniqueElement;
//  };

// console.log(filterNumbers([1, 2, 3, 4, 5], 10, 15, 2, 3, 8)); //[2,3]
// console.log(filterNumbers([10, 15, 25, 30], 23, 30, 18, 15)); // [30,15]
// console.log(filterNumbers([100, 200, 300, 400, 500], 7, 12, 200, 64)); //[200]
